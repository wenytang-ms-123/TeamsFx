name: CD

on:
  workflow_dispatch:
    inputs:
      preid:
        description: "preid name(alpha, rc, stable)"
        required: true
        default: "rc"
      skip-version-rc:
        description: "release RC version just with lerna publish, skip run lerna version(yes or no)"
        required: false
        default: "no"
  schedule:
    - cron: "0 8 * * *"

jobs:
  cd:
    runs-on: ubuntu-latest

    steps:
      - name: Validate CD branch
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' }}
        run: |
          echo It's not allowed to run CD on other branch except main and dev.
          exit 1

      - name: Validate inputs for main
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && github.event.inputs.preid != 'rc' && github.event.inputs.preid != 'stable' }}
        run: |
          echo It's not allowed to release alpha on main branch.
          exit 1

      - name: Valiadte inputs for dev
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev' && github.event.inputs.preid != 'alpha' }}
        run: |
          echo It's not allowed to release RC or stable on dev branch.
          exit 1

      - name: Validate schedule
        if: ${{ github.event_name == 'schedule' && github.ref != 'refs/heads/dev' }}
        run: |
          echo It's not allowed to run schedule release except dev branch.
          exit 1

      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.CD_PAT }}
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Setup npm registry
        run: |
          echo "${{ secrets.NPMRC }}" > ~/.npmrc

      - name: Install Mustache
        run: curl -sSL https://git.io/get-mo -o mo && chmod +x mo && sudo mv mo /usr/local/bin/

      - name: generate templates
        run: .github/scripts/template-zip-autogen.sh

      - name: release templates' alpha version to github
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.CD_PAT }}
          prerelease: true
          automatic_release_tag: "templates@0.0.0-alpha"
          files: |
            ./*.zip

      - name: release templates' rc version to github
        if: ${{ github.ref == 'refs/heads/main' && github.event.inputs.preid == 'rc' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.CD_PAT }}
          prerelease: true
          automatic_release_tag: "templates@0.0.0-rc"
          files: |
            ./*.zip

      - name: cleanup templates
        run: rm -rf ./*.zip && git clean -df

      - name: Download Simple Auth bits
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          shell: pwsh
          command: |
            ./.github/scripts/downloadSimpleAuth.ps1

      - name: Setup project
        run: |
          npm run setup

      - name: Setup git
        run: |
          git config --global user.name 'MSFT-yiz'
          git config --global user.email 'yiz@microsoft.com'

      - name: release alpha npm packages to npmjs.org
        if: ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev' && github.event.inputs.preid == 'alpha')}}
        run: |
          npx lerna version --no-private prerelease --preid=alpha.$(git rev-parse --short HEAD) --no-push --allow-branch dev --yes
          npx lerna publish from-package --dist-tag=alpha --yes --allow-branch dev

      - name: version rc npm packages to npmjs.org
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && github.event.inputs.preid == 'rc' && github.event.inputs.skip-version-rc == 'no'}}
        run: |
          npx lerna version --no-private --conventional-commits --conventional-prerelease --preid=rc --no-changelog --yes

      - name: version stable npm packages to npmjs.org
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && github.event.inputs.preid == 'stable' }}
        run: |
          npx lerna version --no-private --conventional-commits --conventional-graduate --no-changelog --yes
      
      - name: version change
        id: version-change
        run: |
          echo "::set-output name=CHANGED::$(git tag --points-at HEAD | xargs)"

      - name: update cli ai key
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && (github.event.inputs.preid == 'stable'||github.event.inputs.preid == 'rc') }}
        uses: jossef/action-set-json-field@v1
        with:
          file: ./packages/cli/package.json
          field: aiKey
          value: ${{ secrets.CLI_PUBLIC_AIKEY }}

      - name: update extension ai key
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && (github.event.inputs.preid == 'stable'||github.event.inputs.preid == 'rc') }}
        uses: jossef/action-set-json-field@v1
        with:
          file: ./packages/vscode-extension/package.json
          field: aiKey
          value: ${{ secrets.EXT_PUBLIC_AIKEY }}
      
      - name: commit change on local
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && (github.event.inputs.preid == 'stable'||github.event.inputs.preid == 'rc') }}
        run: |
          git add .
          git commit -m "chore: update ai key"

      - name: publish rc npm packages to npmjs.org
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && github.event.inputs.preid == 'rc' }}
        run: |
          npx lerna publish from-package --dist-tag=rc --yes

      - name: publish stable npm packages to npmjs.org
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && github.event.inputs.preid == 'stable' }}
        run: |
          npx lerna publish from-package --yes

      - name: pack vsix
        id: pack-vsix
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          command: |
            sleep 20
            cd ./packages/vscode-extension
            npm install
            npx vsce package
            VERSION=`ls *.vsix | awk -F '.vsix' '{print $1}'`
            echo "::set-output name=VERSION::$VERSION"

      - name: release VSCode extension to github
        if: ${{ contains(steps.version-change.outputs.CHANGED, 'ms-teams-vscode-extension@') }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.CD_PAT }}
          prerelease: true
          automatic_release_tag: ${{ steps.pack-vsix.outputs.VERSION }}
          files: |
            ./packages/**/*.vsix
